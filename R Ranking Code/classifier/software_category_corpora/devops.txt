DevOps (a portmanteau of "development" and "operations") is a concept dealing, among other things with software development, operations and services. It emphasizes communication, collaboration and integration between software developers and information technology (IT) operations personnel.[1][2] DevOps is a response to the interdependence of software development and IT operations. It aims to help an organization rapidly produce software products and services.[3][4][5][6][7]

Simple processes become clearly articulated using a DevOps approach,[citation needed] which aims to maximize the predictability, efficiency, security and maintainability of operational processes. Very often, automation supports this objective.

DevOps integration targets product delivery, quality testing, feature development and maintenance releases in order to improve reliability and security and faster development and deployment cycles. Many of the ideas (and people) involved in DevOps came from the Enterprise Systems Management and Agile software development movements.[8]

DevOps aids in software application release management for an organization by standardizing development environments. Events can be more easily tracked as well as resolving documented process control and granular reporting issues. Companies with release/deployment automation problems usually have existing automation but want to more flexibly manage and drive this automation â€” without needing to enter everything manually at the command-line. Ideally, this automation can be invoked by non-operations employees in specific non-production environments. The DevOps approach grants developers more control of the environment, giving infrastructure more application-centric understanding.

Companies with very frequent releases may require a DevOps awareness or orientation program. Flickr developed a DevOps approach to support a business requirement of ten deployments per day;[9] this daily deployment cycle would be much higher at organizations producing multi-focus or multi-function applications. This is referred to as continuous deployment[10] or continuous delivery [11] and is frequently associated[by whom?] with the lean startup methodology.[12] Working groups, professional associations and blogs have formed on the topic since 2009.[6][13][14]
Development methodologies (such as agile software development) that are adopted in a traditional organization with separate departments for Dev, IT operations and QA, development and deployment activities, previously do not have deep cross-departmental integration with IT support or QA. DevOps promotes a set of processes and methods for thinking about communication and collaboration between departments.[17]

The adoption of DevOps is being driven by factors such as:

    Use of agile and other development processes and methodologies
    Demand for an increased rate of production releases from application and business unit stakeholders
    Wide availability of virtualized[18] and cloud infrastructure from internal and external providers

